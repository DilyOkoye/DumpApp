@model DumpApp.BAL.OperationsModel.ViewModel.OperationsViewModel

@{
    ViewBag.Title = "AddUserProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    options.OnBegin = "OnBegin";
    options.OnComplete = "OnComplete";
    options.OnFailure = "OnFailure";
    options.OnSuccess = "OnSuccess";
    options.LoadingElementId = "divProgress";
    options.LoadingElementDuration = 1000;
    options.UpdateTargetId = "divResponse";
    options.InsertionMode = InsertionMode.InsertAfter;
}
<script type='text/javascript'>
    function foo() {
        window.location = '@Model.Url';
    }
</script>

<div class="row">
    <div class="col-sm-12">

        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">New Dump</h3>
                <div class="panel-options">
                    <a href="#" data-toggle="panel">
                        <span class="collapse-icon">&ndash;</span>
                        <span class="expand-icon">+</span>
                    </a>
                    <a href="#" data-toggle="remove">
                        &times;
                    </a>
                </div>
            </div>
            @using (Ajax.BeginForm("AddNewDump", "Operations", options, new { @class = "form parsley-form" }))
            {
                @Html.AntiForgeryToken()
                <div class="panel-body">

                    <div role="form" class="form-horizontal">

                        <div class="form-group">
                            <label class="col-sm-2 control-label" for="dumpTypeCheck">Requires Initialization</label>
                            
                            <div class="col-sm-10">
                                @Html.CheckBoxFor(model => model.dumps.DumpTypeCheck, new { @autocomplete = "off", @style = "text-transform:uppercase", @class = "form-check-input", @id = "DumpTypeCheck", required = "required" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label" for="inlineRadio1">Dump Type</label>
                            <div class="col-sm-10">
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(model => model.dumps.DumpType, "Offsite", new { @autocomplete = "off", @class = "form-check-input", @id = "DumpType", required = "required" })

                                    <label class="form-check-label" for="inlineRadio1">Offsite Use</label>
                                    &nbsp;&nbsp;
                                    @Html.RadioButtonFor(model => model.dumps.DumpType, "Internal", new { @autocomplete = "off", @class = "form-check-input", @id = "DumpType", required = "required" })

                                    <label class="form-check-label" for="inlineRadio1">Internal Use</label>
                                </div>
                            </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="field-1">Tape Identifier</label>

                                <div class="col-sm-10">
                                    @Html.TextBoxFor(model => model.dumps.TapeIdentifier, new { @autocomplete = "off", @style = "text-transform:uppercase", @class = "form-control", @id = "TapeIdentifier", required = "required" })
                                </div>
                            </div>

                            <div class="form-group-separator"></div>

                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="field-2">Dump Name</label>

                                <div class="col-sm-10">
                                    @Html.TextBoxFor(model => model.dumps.DumpName, new { @autocomplete = "off", @class = "form-control", @id = "DumpName", required = "required" })


                                </div>
                            </div>

                            <div class="form-group-separator"></div>

                        <div class="form-group">
                            <label class="col-sm-2 control-label" for="field-2">Filename</label>

                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.dumps.Filename, new { @autocomplete = "off", @class = "form-control", @id = "Filename", required = "required" })
                            </div>
                        </div>
                        
                        <div class="form-group-separator"></div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label" for="field-2">Dump Description</label>

                            <div class="col-sm-10">
                                @Html.TextAreaFor(model => model.dumps.DumpDescription, new { @autocomplete = "off", @class = "form-control", @id = "DumpDescription", required = "required" })
                            </div>
                        </div>


                        <div class="form-group-separator"></div>

                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="field-3"></label>
                                <div class="col-sm-10">

                                    <button type="submit" class="btn btn-info"><i class="fa-save"></i>Save</button>
                                    
                                    <button type="submit" class="btn btn-success"><i class="fa-check"></i>Execute</button>

                                    <input type="button" id="Return" value="Return " class="btn btn-info" onclick="foo()">
                                </div>

                            </div>

                        </div>

                </div>
            }
        </div>

    </div>
</div>

